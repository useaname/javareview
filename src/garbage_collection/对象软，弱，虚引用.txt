对大部分对象而言，程序里会有一个引用变量引用该对象，这种方式是最常见的引用方式。除此之外，java.lang.ref包提供了三个类：SoftReference，
PhantomReference和WeaKReference。它们分别代表系统对对象的三种引用方式:软引用，虚引用和弱引用。因此Java语言对对象的引用由如下四种：
 强引用(StrongReference)。
 
强引用(StrongReference)
是Java程序中最常见的引用方式，程序创建一个对象，并把这个对象赋给以哟个引用变量。程序通过该引用变量来操作实际对象，前面介绍的对象和组数都是采
用了这种强引用的方式。当一个对象被一个或被一个以上的引用变量所引用时，它处于激活状态，不可能被系统垃圾回收机制回收。

软引用（softReference）
软引用时通过SoftReferebce类来实现的，当一个对象只具有软引用时，它可能被垃圾回收机制回收。对于只用软引用的对象而言，当系统内存空间足够时，
它不会被系统回收，程序也可以使用该对象；当系统内存空间不足时，系统将会回收它。软引用通常用于对内存敏感的程序中。

弱引用(WeakReference)
弱引用似乎通过WeakReference类实现，弱引用和软引用很像,但弱引用的引用级别更低。对于只有弱引用的对象而言，当系统垃圾回收机制运行时，不管
系统内存是否足够，总会回收该对象的所占用的内存，当然,并不是说当一个对象只有弱引用时，它就会立即被回收---正如那些失去引用的的对象一样，必须
等到系统垃圾回收机制运行时才会被回收。

虚引用(PhantomReference)
虚引用通过PhantomReference类实现，虚引用完全类似于没有引用。虚引用对对象本身没有太大的影响，对象甚至感觉不到虚引用的存在，如果一个对象
只有一个虚引用时，那它和没用引用的效果大致相同。虚引用主要用于跟踪对象被垃圾回收的状态，虚虚引用不能单独使用，虚引用闭合和引用队列
（ReferenceQueue）联合使用。

上面三个引用类都包含了一个get方法，用于获取它们所引用的对象。
         