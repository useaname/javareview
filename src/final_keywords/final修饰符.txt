final修饰的实例属性， 要么在定义该属性时指定初始值，要么在普通初始化块或者构造器中为该属性指定
初始值，但需要注意到是，如果普通初始化块已经为某个实例属性指定初始值，则不能再在构造器中
为该实例属性指定初始值；

final修饰的类属性 ，要么在定义该属性时指定初始值，要么在静态初始化块中为该属性指定初始值。实例属性不能在静态初始化块中指定初始值，因为静态
初始化块是静态成员，不可访问实例属性--非静态成员；类属性不能在普通初始化块中指定初始值，因为类属性在类初始坏阶段已经被初始化，普通初始化块不能对其重新赋值

final修饰的引用类型 变量 不能被重新赋值，但可以改变引用变量所引用的内容。
注意，如果final修饰的是基本数据类型，且在编译时就可以确定该变量的值，于是可以把该变量当成常量来处理，根据Java的命令规范：常量名由多个有意义
的单词连缀而成，单词与单词之间以下划线来分割，如MAX_TAX_RATE=20。反之，如果final修饰的是引用数据类型，final变量无法在编译时就获得值，
而必须在运行时才能得到值，例如，final Aclass aInstance = new Aclass();编译时系统不会创建一个Aclass对象来赋给aInstance变量
，所以aInstance无需使用常量命名规则。

final修饰的方法不可被重写，并不是不能被重载
final修饰类不可以有子类
